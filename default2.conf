load_module modules/ngx_http_js_module.so;
events {}
http {
    ###     log format
    log_format detailed  '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" "$http_user_agent" '
                         '$request_length $request_time [$proxy_host] [$host] $upstream_addr '
                         '$upstream_response_length $upstream_response_time $upstream_status $request_id';
    error_log /dev/stderr warn;
    access_log /dev/stdout detailed;
    upstream site {
        zone   upstream_site 64k;
        hash $scheme$proxy_host$request_uri consistent;
        keepalive 65;
        server 192.168.0.130;
        #server 127.0.0.1:8081;
    }
    resolver  1.1.1.1 ipv6=off;
    resolver_timeout 5s;

    js_import ingress from /etc/nginx/njs/ingress.js;
    js_shared_dict_zone zone=proxy:512K;
    js_shared_dict_zone zone=count:512K type=number;
    js_preload_object preloadedUpstreams from /etc/nginx/njs/preload.js;
    # Specify the location of the trusted CA certificate bundle
    js_fetch_trusted_certificate /etc/ssl/certs/ca-certificates.crt;


    js_set $upstream ingress.getUpstream;
    server {
      listen 80;
      

      location / {
        js_var $ingress_service "default-nginx1-80";
        js_var $upstreamFilePath "/etc/nginx/upstreams/";
        proxy_pass $upstream;
      }
      
      location /api/upstream {
          js_var $ingress_service "default-nginx1-80";
          js_var $upstreamFilePath "/etc/nginx/upstreams/";
          js_content ingress.handleUpstreamAPI;
      }
      
      
    }
}
