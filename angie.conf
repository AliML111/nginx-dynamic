load_module modules/ngx_http_js_module.so;
worker_processes  auto;
worker_rlimit_nofile 65536;

error_log  /var/log/angie/error.log notice;
pid        /run/angie.pid;

events {
    worker_connections  65536;
}
http {
    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;
    log_subrequest on;
    include       /etc/angie/mime.types;
    default_type  application/octet-stream;
    ###     log format
    log_format detailed  '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" "$http_user_agent" '
                         '$request_length $request_time [$proxy_host] [$host] $upstream_addr '
                         '$upstream_response_length $upstream_response_time $upstream_status $request_id';
    error_log /dev/stderr warn;
    access_log /dev/stdout detailed;

    resolver  1.1.1.1 ipv6=off status_zone=resolver_zone;
    resolver_timeout 5s;

    js_import ingress from /etc/angie/njs/ingress.js;
    js_shared_dict_zone zone=proxy:512K;
    js_shared_dict_zone zone=count:512K type=number;
    js_preload_object preloadedUpstreams from /etc/angie/njs/preload.js;
    # Specify the location of the trusted CA certificate bundle
    js_fetch_trusted_certificate /etc/ssl/certs/ca-certificates.crt;


    js_set $upstream ingress.getUpstream;
    server {
      listen 80;

      location /console/ {

    auto_redirect on;
 
    alias /usr/share/angie-console-light/html/;
    index index.html;

    location /console/api/ {
        api /status/;
    }

}

      location / {
        status_zone check_reqs;
        js_var $ingress_service "default-angie1-80";
        proxy_pass $upstream;
      }

      
      
      location /api/ {
          status_zone api_reqs;
          js_var $ingress_service "default-angie1-80";
          js_content ingress.handleUpstreamAPI;
      }
      
      
    }
}
